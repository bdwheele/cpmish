; Brother WP2450DS cpmish BIOS Â© 2019 David Given
; This file is distributable under the terms of the 2-clause BSD license.
; See COPYING.cpmish in the distribution root directory for more information.

    maclib pn8800
    maclib cpmish
    maclib cpm

    cseg

; Writes A to the FDC data register.

label FDCTX
	push af
.1:
    in0 a, (PORT_HD63266_STATUS)
	rla							; RQM...
	jr nc, .1		            ; ...low, keep waiting

	pop af
    out0 (PORT_HD63266_DATA), a
	ret

; Writes a complete command. HL is pointer, B is length.

label FDCTXB
.1
    ld a, (hl)
    inc hl
    call FDCTX
    djnz .1
    ret

; Finish up a read or write transfer.
; Returns nz on success, z on failure.

label FDCENDRW
    call FDCRDST
    ; Parsing the status code is fiddly, because we're allowed a readfail if
    ; EN is set.
    ld a, (FDCSTAT+1)
    rla             ; EN->C
    ld a, (FDCSTAT+0)
    rla             ; IC6->b7, IC7->C, EN->b0
    rla             ; IC6->C, IC7->b0, EN->b1
    rla             ; IC6->b0, IC7->b1, EN->b2
    and 7           ; clip off stray bits
    ; This gives us a number from 0..7 which is our error. We use this
    ; bitmap to determine whether it's fatal or not.
    ; EN, IC7, IC6
    ; 1    ; OK
    ; 0    ; readfail
    ; 0    ; unknown command
    ; 0    ; disk removed
    ; 1    ; OK
    ; 1    ; reached end of track
    ; 0    ; unknown command
    ; 0    ; disk removed
    inc a
    ld b, a
    ld a, 10001100b
.1
    add a
    djnz .1
    ; The appropriate bit from the bitmap is now in C.
    ld a, 0
    rla             ; copy carry to bit 0, set z or nz
    ret

; Reads bytes from the FDC data register until the FDC tells us to stop (by
; lowering DIO in the status register).

label FDCRDST
	ld hl, FDCSTAT
.1:
    in0 a, (PORT_HD63266_STATUS)
	rla							; RQM...
	jr nc, .1              		; ...low, keep waiting 
	rla							; DIO...
	ret nc						; ...low, no more data
    in0 a, (PORT_HD63266_DATA)
	ld (hl), a
	inc hl
	jr .1
label FDCSTAT
	ds 8						; 8 bytes of status data
 
 ; Seeks to track A.
 ; Returns nz on success, z on failure.

 label FDCSEEK
    ld b, a
	call fdc_wait_until_drive_ready
	ret z

	ld a, 0x0f                  ; SEEK
	call FDCTX
	xor a                       ; head 0, drive 0
	call FDCTX
	ld a, b                     ; track number
	call FDCTX

    ; Wait for the command to start.

.2
    in0 a, (PORT_HD63266_STATUS)
    and 0x0f
    jr z, .2

    ; Wait for the command to _end_...

.1:
	ld a, 8						; SENSE INTERRUPT STATUS
	call FDCTX
	call FDCRDST

	ld a, (FDCSTAT)
	bit 5, a					; SE, seek end
	jr z, .1
	ret

; Waits until the drive is ready.
 
fdc_wait_until_drive_ready:
	call fdc_sense_drive_state
	bit 5, a
	ret nz
    jr fdc_wait_until_drive_ready

; Performs the SENSE DRIVE STATE command, returning S3 in A.

fdc_sense_drive_state:
	ld a, 4                         ; SENSE DRIVE STATE
	call FDCTX
	xor a                           ; head 0, drive 0
	call FDCTX
	call FDCRDST
	ld a, (FDCSTAT)
	ret



; vim: ts=4 sw=4 et ft=asm
